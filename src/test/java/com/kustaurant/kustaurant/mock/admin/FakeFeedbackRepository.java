package com.kustaurant.kustaurant.mock.admin;

import com.kustaurant.kustaurant.admin.feedback.domain.Feedback;
import com.kustaurant.kustaurant.admin.feedback.service.port.FeedbackRepository;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Collectors;

public class FakeFeedbackRepository implements FeedbackRepository {
    private final AtomicInteger autoGeneratedId = new AtomicInteger(1);
    private final List<Feedback> data = Collections.synchronizedList(new ArrayList<>());

    @Override
    public List<Feedback> findAllByUserId(Long userId) {
        return data.stream()
                .filter(f -> f.getWriter().equals(userId))
                .collect(Collectors.toList());
    }

    @Override
    public void save(Feedback req) {
        Feedback newFeedback = Feedback.builder()
                .id(autoGeneratedId.getAndIncrement())
                .writer(req.getWriter())
                .comment(req.getComment())
                .createdAt(req.getCreatedAt())
                .build();

        data.add(newFeedback);
    }

}
