name: Build And Deploy If Changed

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      kustaurant: ${{ steps.paths.outputs.kustaurant }}
      crawler: ${{ steps.paths.outputs.crawler }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: paths
        with:
          filters: |
            kustaurant:
              - 'server/kustaurant/**'
              - 'common/**'
            crawler:
              - 'server/crawler/**'
              - 'common/**'

  kustaurant-build-push:
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.kustaurant == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build Server:Kustaurant module
        run: ./gradlew :server:kustaurant:clean :server:kustaurant:build --no-daemon

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/kustaurant
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: 도커 이미지 빌드 및 푸쉬
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/kustaurant/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/kustaurant:buildcache
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/kustaurant:buildcache,mode=max

  deploy:
    needs: kustaurant-build-push
    if: needs.detect-changes.outputs.kustaurant == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: env 파일 업데이트
        uses: appleboy/ssh-action@v1.2.0
        env:
          ENV_FILE: ${{ secrets.KUSTAURANT_ENV_FILE }}
          DOCKER_COMPOSE_ENV_FILE: ${{ secrets.KUSTAURANT_DOCKER_COMPOSE_ENV_FILE }}
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_PRIVATE_KEY }}
          script: |
            set -e
            mkdir -p /home/ubuntu/kustaurant-docker
            cd /home/ubuntu/kustaurant-docker
            umask 077
            cat > .env <<EOF
            ${ENV_FILE}
            ${DOCKER_COMPOSE_ENV_FILE}
            EOF

      - name: docker-compose 파일 업데이트
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_PRIVATE_KEY }}
          source: |
            infra/kustaurant/docker-compose.yml
            infra/kustaurant/docker-compose.prod.yml
          target: "/home/ubuntu/kustaurant-docker/"

      - name: docker 이미지 pull 및 docker compose 실행
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/kustaurant-docker
            docker compose -f docker-compose.yml -f docker-compose.prod.yml pull
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            docker image prune -f